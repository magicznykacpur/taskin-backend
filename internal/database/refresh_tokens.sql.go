// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: refresh_tokens.sql

package database

import (
	"context"
	"time"
)

const createRefreshToken = `-- name: CreateRefreshToken :one
INSERT INTO refresh_tokens(user_id, created_at, updated_at, is_revoked, expires_at)
VALUES (?, ?, ?, 0, ?)
RETURNING user_id, created_at, updated_at, is_revoked, expires_at
`

type CreateRefreshTokenParams struct {
	UserID    string
	CreatedAt time.Time
	UpdatedAt time.Time
	ExpiresAt time.Time
}

func (q *Queries) CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, createRefreshToken,
		arg.UserID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.ExpiresAt,
	)
	var i RefreshToken
	err := row.Scan(
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.IsRevoked,
		&i.ExpiresAt,
	)
	return i, err
}

const revokeRefreshToken = `-- name: RevokeRefreshToken :exec
UPDATE refresh_tokens SET is_revoked = 1 WHERE user_id = ?
`

func (q *Queries) RevokeRefreshToken(ctx context.Context, userID string) error {
	_, err := q.db.ExecContext(ctx, revokeRefreshToken, userID)
	return err
}
